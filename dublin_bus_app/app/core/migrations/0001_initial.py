# Generated by Django 3.2.4 on 2021-07-20 15:03

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Agency',
            fields=[
                ('agency_id', models.CharField(max_length=45, primary_key=True, serialize=False)),
                ('agency_name', models.CharField(blank=True, max_length=45, null=True)),
                ('agency_url', models.CharField(blank=True, max_length=45, null=True)),
                ('agency_timezone', models.CharField(blank=True, max_length=45, null=True)),
                ('agency_lang', models.CharField(blank=True, max_length=45, null=True)),
            ],
            options={
                'db_table': 'agency',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Calendar',
            fields=[
                ('service_id', models.CharField(max_length=45, primary_key=True, serialize=False)),
                ('monday', models.IntegerField(blank=True, null=True)),
                ('tuesday', models.IntegerField(blank=True, null=True)),
                ('wednesday', models.IntegerField(blank=True, null=True)),
                ('thursday', models.IntegerField(blank=True, null=True)),
                ('friday', models.IntegerField(blank=True, null=True)),
                ('saturday', models.IntegerField(blank=True, null=True)),
                ('sunday', models.IntegerField(blank=True, null=True)),
                ('start_date', models.CharField(blank=True, max_length=45, null=True)),
                ('end_date', models.CharField(blank=True, max_length=45, null=True)),
            ],
            options={
                'db_table': 'calendar',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CalendarDates',
            fields=[
                ('service_id', models.CharField(blank=True, max_length=45, null=True)),
                ('date', models.CharField(max_length=45, primary_key=True, serialize=False)),
                ('exception_type', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'calendar_dates',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RealtimeBusData',
            fields=[
                ('key', models.IntegerField(primary_key=True, serialize=False)),
                ('timestamp', models.CharField(blank=True, max_length=45, null=True)),
                ('id', models.CharField(blank=True, max_length=45, null=True)),
                ('trip_id', models.CharField(blank=True, max_length=45, null=True)),
                ('start_time', models.CharField(blank=True, max_length=45, null=True)),
                ('start_date', models.CharField(blank=True, max_length=45, null=True)),
                ('route_id', models.CharField(blank=True, max_length=45, null=True)),
                ('stop_sequence', models.IntegerField(blank=True, null=True)),
                ('arrival_delay', models.IntegerField(blank=True, null=True)),
                ('departure_delay', models.IntegerField(blank=True, null=True)),
                ('stop_id', models.CharField(blank=True, max_length=45, null=True)),
            ],
            options={
                'db_table': 'realtime_bus_data',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RealtimeWeatherData',
            fields=[
                ('dt', models.CharField(max_length=45, primary_key=True, serialize=False)),
                ('temp', models.IntegerField(blank=True, null=True)),
                ('humidity', models.IntegerField(blank=True, null=True)),
                ('speed', models.IntegerField(blank=True, null=True)),
                ('description', models.CharField(blank=True, max_length=45, null=True)),
            ],
            options={
                'db_table': 'realtime_weather_data',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RouteByStops',
            fields=[
                ('shapeid', models.CharField(db_column='ShapeId', max_length=45, primary_key=True, serialize=False)),
                ('operator', models.CharField(blank=True, db_column='Operator', max_length=45, null=True)),
                ('stopsequence', models.IntegerField(db_column='StopSequence')),
                ('routename', models.CharField(blank=True, db_column='RouteName', max_length=45, null=True)),
                ('routedescription', models.TextField(blank=True, db_column='RouteDescription', null=True)),
                ('direction', models.TextField(blank=True, db_column='Direction', null=True)),
                ('atcocode', models.TextField(blank=True, db_column='AtcoCode', null=True)),
                ('platecode', models.TextField(blank=True, db_column='PlateCode', null=True)),
                ('latitude', models.TextField(blank=True, db_column='Latitude', null=True)),
                ('longitude', models.TextField(blank=True, db_column='Longitude', null=True)),
                ('shortcommonname_en', models.TextField(blank=True, db_column='ShortCommonName_en', null=True)),
                ('shortcommonname_ga', models.TextField(blank=True, db_column='ShortCommonName_ga', null=True)),
                ('haspole', models.TextField(blank=True, db_column='HasPole', null=True)),
                ('hasshelter', models.TextField(blank=True, db_column='HasShelter', null=True)),
                ('carouseltype', models.TextField(blank=True, db_column='CarouselType', null=True)),
                ('flagdata', models.TextField(blank=True, db_column='FlagData', null=True)),
                ('routedata', models.TextField(blank=True, db_column='RouteData', null=True)),
            ],
            options={
                'db_table': 'route_by_stops',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Routes',
            fields=[
                ('route_id', models.CharField(max_length=45, primary_key=True, serialize=False)),
                ('agency_id', models.CharField(blank=True, max_length=45, null=True)),
                ('route_short_name', models.CharField(blank=True, max_length=45, null=True)),
                ('route_long_name', models.CharField(blank=True, max_length=45, null=True)),
                ('route_type', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'routes',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Shapes',
            fields=[
                ('shape_id', models.CharField(max_length=45, primary_key=True, serialize=False)),
                ('shape_pt_lat', models.CharField(blank=True, max_length=45, null=True)),
                ('shape_pt_lon', models.CharField(blank=True, max_length=45, null=True)),
                ('shape_pt_sequence', models.CharField(max_length=45)),
                ('shape_dist_traveled', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'shapes',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Stops',
            fields=[
                ('stop_id', models.CharField(max_length=45, primary_key=True, serialize=False)),
                ('stop_name', models.CharField(blank=True, max_length=45, null=True)),
                ('stop_lat', models.CharField(blank=True, max_length=45, null=True)),
                ('stop_lon', models.CharField(blank=True, max_length=45, null=True)),
            ],
            options={
                'db_table': 'stops',
                'managed': False,
            },
        ),
    ]
